{"version":3,"sources":["webpack:///../src/docs/webdev/geting_started/初识CSS.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","name","src","isMDXComponent"],"mappings":"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","file":"component---src-docs-webdev-geting-started-初识css-mdx-5d96db71cba9439326aa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/wuliang/WorkSpace.localized/courses/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { JCode } from '@/JCode';\nimport { Pagination } from '@/pagination';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"初识css\"\n    }}>{`初识CSS`}</h1>\n    <h2 {...{\n      \"id\": \"什么是css\"\n    }}>{`什么是CSS`}</h2>\n    <p><strong parentName=\"p\">{`CSS`}</strong>{`是层叠样式表 (Cascading Style Sheets）的缩写，它是一种用来描述 HTML或XML文档呈现形式的语言。CSS描述了在屏幕、纸质、音频等多种媒体上的元素应该如何被渲染。`}</p>\n    <h3 {...{\n      \"id\": \"css的基本语法\"\n    }}>{`CSS的基本语法`}</h3>\n    <p>{`一个页面的CSS由若干条`}<strong parentName=\"p\">{`规则`}</strong>{`组成，每一条规则包括`}<strong parentName=\"p\">{`选择器`}</strong>{`和`}<strong parentName=\"p\">{`声明块`}</strong>{`。`}</p>\n    <p>{`看一个例子：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`body {\n  background-color: black;\n  color: white;\n}\n`}</code></pre>\n    <p>{`上面的代码，是一条CSS规则。写在花括号前面的内容，叫选择器。`}</p>\n    <p>{`选择器决定该规则作用于哪些HTML元素。`}</p>\n    <p>{`这里的选择器是`}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`，表示该规则作用于网页上的body元素。`}</p>\n    <p>{`选择器后面是一段被一对花括号`}<inlineCode parentName=\"p\">{`{}`}</inlineCode>{`包裹的内容，这些内容由若干条被冒号`}<inlineCode parentName=\"p\">{`:`}</inlineCode>{`分割的`}<strong parentName=\"p\">{`声明`}</strong>{`构成，每条声明以分号`}<inlineCode parentName=\"p\">{`;`}</inlineCode>{`结尾。`}</p>\n    <p>{`声明里冒号前面的部分是属性，表示要设置元素的哪一个属性。CSS可以设置的属性很多，包括元素的背景、字体、大小、位置、边框以及动画效果等等。在例子里，属性`}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{`表示设置元素的背景颜色，属性`}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`表示设置元素的文字颜色。`}</p>\n    <p>{`声明里冒号后面的部分是属性值，表示该属性要设置为哪个值。在例子里，我们将属性`}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{`的值设置为`}<inlineCode parentName=\"p\">{`black`}</inlineCode>{`表示黑色，将属性`}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`的值设为`}<inlineCode parentName=\"p\">{`white`}</inlineCode>{`表示白色。`}</p>\n    <p>{`这样，整条CSS规则的意思是：`}<strong parentName=\"p\">{`将页面上的body元素的背景色设置为黑色，文字颜色设置为白色。`}</strong></p>\n    <h3 {...{\n      \"id\": \"加载css\"\n    }}>{`加载CSS`}</h3>\n    <p>{`写好了CSS规则，我们要将它加载到页面上。`}</p>\n    <p>{`在网页中，加载CSS的方式有3种：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`第一种是嵌入：这种方式是把样式直接写在style标签里。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<html>\n  <head>\n    ...\n    <style>\n      body {\n        background-color: black;\n        color: white;\n      }    \n    </style>\n  </head>\n  <body>\n    ....\n  </body>\n</html>\n`}</code></pre>\n        <p parentName=\"li\">{`以嵌入方式写CSS样式，推荐将style标签写在所有可呈现元素的前面，所以我们一般写在head里。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`第二种是外链。这种方式 是把css写在单独的文件中，通过link标签，把css文件加载进来。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<html>\n  <head>\n    ...\n    <link rel=\"stylesheet\" href=\"/static/css/style.css\">\n  </head>\n  <body>\n    ....\n  </body>\n</html>\n`}</code></pre>\n        <p parentName=\"li\">{`我们可以通过`}<inlineCode parentName=\"p\">{`link`}</inlineCode>{`标签让浏览器加载外部的CSS文件。同样，`}<inlineCode parentName=\"p\">{`link`}</inlineCode>{`标签也推荐写在head里。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`第三种方法是内联。内联是直接把样式声明写在元素的style属性里。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<html>\n  <head>\n    ...\n  </head>\n  <body style=\"background-color: black; color: white\">\n    ....\n  </body>\n</html>\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`在这三种加载CSS的方式里，最推荐的是第二种方式，因为这种方式将CSS和HTML完全分开，有利于代码维护。`}</p>\n    <p {...{\n      \"className\": \"hint tip\"\n    }}>{`一般情况下，我们不推荐使用第三种方式加载CSS，因为这种方式将HTML和CSS完全混在一起，破坏了CSS的独立性，也不便于规则的复用。`}</p>\n    <p>{`为了学习和演示方便，本课程采用第一种方式加载，也就是直接将CSS嵌入在style标签里。`}</p>\n    <p>{`如下面的例子，我们将前面写的CSS规则通过内嵌style标签的方式添加到网页代码里：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>我的第一个网页</title>\n    <style>\n    body {\n      background-color: black;\n      color: white;\n    }\n    </style>\n  </head>\n  <body>\n    <h1>稀土教程</h1>\n    <img src=\"https://s1.ssl.qhres2.com/static/14a7d288e11f8022.svg\" alt=\"稀土掘金\">\n    <p>欢迎来到稀土教程，在这里，我们为你准备了由浅入深的<em>Web开发课程</em>。</p>\n    <h2>第3课</h2>\n    <p>要进入Web开发的世界，要做的第一件事是了解Web开发的语言。我们从<a href=\"https://developer.mozilla.org/zh-CN/docs/learn/HTML/Introduction_to_HTML\">HTML</a>开始入手，HTML是浏览器能够识别的“第一语言”。</p>\n  </body>\n</html>\n`}</code></pre>\n    <p>{`通过`}<a parentName=\"p\" {...{\n        \"href\": \"https://code.juejin.cn\"\n      }}>{`码上掘金`}</a>{`，可以看到整个网页从之前的白底黑字，变成了黑底白字。`}</p>\n    <JCode codeId=\"7105205999430008840\" mdxType=\"JCode\" />\n    <p>{`我们看到，浏览器对不同标签默认的呈现方式被我们定义的CSS覆盖，使网页效果按照我们的需求（即：白底黑字）展现出来。`}</p>\n    <h3 {...{\n      \"id\": \"属性的继承\"\n    }}>{`属性的继承`}</h3>\n    <p>{`元素的一些CSS属性是有继承关系的，有继承关系的属性被称为`}<strong parentName=\"p\">{`可继承属性`}</strong>{`。color属性就是一个可继承属性。还记得前面的课程里我们说过HTML文档结构是树状结构，元素之间有嵌套关系。可继承属性是指如果我们在外层元素上设置了这个样式属性，内层没有设置该属性的元素都会`}<strong parentName=\"p\">{`自动继承`}</strong>{`该属性。比如我们给body设置了color为白色，它内层的h1、h2、p、em等标签我们没有设置color，但是它们自动继承了body设置的color，于是也成为了白色。`}</p>\n    <p>{`与之不同的是，`}<strong parentName=\"p\">{`不可继承属性`}</strong>{`是指设置在外层元素的属性不会影响没有设置该属性的内层元素的显示效果。比如backgroud-color就是是一个不可继承的属性，我们给body设置了background-color为黑色，并不会将它内层元素的background-color也设置为黑色。这里我们看到整个页面都成为黑色，是因为body刚好占据整个页面，而其他没有设置background-color的元素默认的背景是透明色，所以看起来好像是它们一起变黑了。在后面，我们会接触到更多的例子来说明可继承属性和不可继承属性的不同。`}</p>\n    <p>{`下面我们再来做一个简单的修改，我们给第一段文字单独设置一个color为红色：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>我的第一个网页</title>\n    <style>\n    body {\n      background-color: black;\n      color: white;\n    }\n    p.first-para {\n      color: red;\n    }\n    </style>\n  </head>\n  <body>\n    <h1>稀土教程</h1>\n    <img src=\"https://s1.ssl.qhres2.com/static/14a7d288e11f8022.svg\" alt=\"稀土掘金\">\n    <p class=\"first-para\">欢迎来到稀土教程，在这里，我们为你准备了由浅入深的<em>Web开发课程</em>。</p>\n    <h2>第3课</h2>\n    <p>要进入Web开发的世界，要做的第一件事是了解Web开发的语言。我们从<a href=\"https://developer.mozilla.org/zh-CN/docs/learn/HTML/Introduction_to_HTML\">HTML</a>开始入手，HTML是浏览器能够识别的“第一语言”。</p>\n  </body>\n</html>\n`}</code></pre>\n    <p>{`在这里，我们做了两件事情：`}</p>\n    <p>{`首先我们给`}<inlineCode parentName=\"p\">{`<style>`}</inlineCode>{`标签里面增加了一段新的CSS规则：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`p.first-para {\n  color: red;\n}\n`}</code></pre>\n    <p>{`我们没有直接使用p作为选择器，而是给p后面增加了一串`}<inlineCode parentName=\"p\">{`.first-para`}</inlineCode>{`，这个在css中叫做`}<strong parentName=\"p\">{`类选择器`}</strong>{`。我们之所以这么做，是因为我们的页面上有两个p元素，而我们只想让这个新的规则`}<strong parentName=\"p\">{`命中`}</strong>{`其中的一个p元素。`}</p>\n    <p>{`于是，对应的，我们给第一个p元素增加了一个class属性：`}<inlineCode parentName=\"p\">{`class=\"first-para\"`}</inlineCode>{`。这个选择器表示选择class=first-para的p元素，也就是命中了页面上的第一个p元素，于是我们看到的网页内容就变成如下图所示：`}</p>\n    <JCode codeId=\"7105207307516477471\" mdxType=\"JCode\" />\n    <p>{`注意到不仅p元素的文字变成红色，其中的子元素em(`}<inlineCode parentName=\"p\">{`<em>Web开发</em>`}</inlineCode>{`)也变成了红色，这再一次印证了CSS属性color是可继承属性这一事实。`}</p>\n    <p>{`最后，我们再了解一下，为什么`}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`元素中的文字没有随着body的文字颜色变成白色。这是因为CSS属性继承的条件是子元素的属性`}<strong parentName=\"p\">{`没有`}</strong>{`被设置。默认情况下， 浏览器已经为`}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`元素的color属性设置了默认的值。这个默认值覆盖了`}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{`的color属性设置， 所以`}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`元素就不会被`}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{`的color属性影响了。`}</p>\n    <h3 {...{\n      \"id\": \"状态的选择器伪类\"\n    }}>{`状态的选择器——伪类`}</h3>\n    <p><inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`标签表示链接，在网页中，一个链接中的文字有四种状态：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`第一种状态是默认（link）状态，对应用户访问网页时，还未点击过该链接文字。`}</li>\n      <li parentName=\"ul\">{`第二种状态是悬停（hover）状态，对应用户使用鼠标悬停在该链接的文字上时。`}</li>\n      <li parentName=\"ul\">{`第三种状态是激活（active）状态，对应用户正在点击链接文字的一瞬间（比如鼠标按下或触屏中）。`}</li>\n      <li parentName=\"ul\">{`第四种状态是已访问过（visited）状态，对应用户已访问过该链接文字。`}</li>\n    </ul>\n    <p>{`浏览器默认将link状态文字颜色默认设为蓝色，将hover状态文字颜色默认设为与link状态颜色相同，将active状态文字颜色默认设为红色，将visited状态文字颜色默认设为紫色。`}</p>\n    <p>{`我们可以通过CSS修改链接的这四种状态的默认颜色，如下代码所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`a:link {\n  color: white;\n}\na:hover {\n  color: green;\n}\na:active {\n  color: orange;\n}\na:visited {\n  color: yellow;\n}\n`}</code></pre>\n    <p>{`这里我们看到与前面不同的一种选择器，它以冒号`}<inlineCode parentName=\"p\">{`:`}</inlineCode>{`开头，表示元素的某种状态。这样的选择器被称为`}<strong parentName=\"p\">{`伪类选择器`}</strong>{`（pseudo-class）。`}</p>\n    <p>{`最终效果如下：`}</p>\n    <JCode codeId=\"7105208174008860708\" mdxType=\"JCode\" />\n    <p>{`好了，我们来总结一下这节课里出现的三种选择器，我们先回顾一下刚才我们写过的所有的CSS规则：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`body {\n  background-color: black;\n  color: white;\n}\np.first-para {\n  color: red;\n}\na:link {\n  color: white;\n}\na:hover {\n  color: green;\n}\na:active {\n  color: orange;\n}\na:visited {\n  color: yellow;\n}\n`}</code></pre>\n    <p>{`上面的代码里一共有6个CSS规则，每个规则都有选择器，按照类型划分一共有三类选择器。`}</p>\n    <p>{`第一类选择器是`}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`p`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`这样的选择器，它们叫做`}<strong parentName=\"p\">{`元素选择器`}</strong>{`，表示选择某种类型（即某种标签）的元素。`}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`选择网页里所有的body元素（一个网页只有一个body元素），`}<inlineCode parentName=\"p\">{`p`}</inlineCode>{`选择网页里所有的p元素，`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`选择网页里所有的a元素。`}</p>\n    <p>{`第二类选择器是`}<inlineCode parentName=\"p\">{`.first-para`}</inlineCode>{`这样的选择器，它叫做`}<strong parentName=\"p\">{`类选择器`}</strong>{`，表示选择某个拥有特定的`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`属性的元素。`}</p>\n    <p>{`第三类选择器是`}<inlineCode parentName=\"p\">{`:link`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`:active`}</inlineCode>{`这样的选择器，它们叫做`}<strong parentName=\"p\">{`伪类(pseudo-class)`}</strong>{`，表示选择元素的某个特定状态。`}</p>\n    <p>{`注意CSS的选择器是可以组合的，比如上面代码的第二条规则里，`}<inlineCode parentName=\"p\">{`p.first-para`}</inlineCode>{`——组合了一个元素选择器和一个类选择器。该选择器表示选中页面上所有带有`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`属性且`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`属性值为`}<inlineCode parentName=\"p\">{`first-para`}</inlineCode>{`的P元素。同样，在规则3-6里，我们组合了元素选择器`}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`和伪类。我们还可以组合更多的选择器以匹配更复杂的规则，例如：`}<inlineCode parentName=\"p\">{`a.myclass:visited`}</inlineCode>{`表示选择页面上所有`}<inlineCode parentName=\"p\">{`class=\"myclass\"`}</inlineCode>{`且状态为`}<inlineCode parentName=\"p\">{`visited`}</inlineCode>{`的a元素。`}</p>\n    <p>{`元素选择器、类选择器和伪类是三种常用的CSS选择器，此外，CSS还有许多其它类型的选择器，而组合选择器的规则也可以更加复杂。在本课程里，不打算全面介绍这些内容，在后续的课程里，随着学习和实践的深入，我们会逐步讲解CSS更深入的内容。如果你希望先对CSS有更全面的了解，可以阅读`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference\"\n      }}>{`MDN CSS`}</a>{`以获得更丰富的知识内容。`}</p>\n    <h2 {...{\n      \"id\": \"层叠与优先级\"\n    }}>{`“层叠”与优先级`}</h2>\n    <p>{`CSS规则根据选择器匹配范围来`}<strong parentName=\"p\">{`命中`}</strong>{`元素，页面上的一个元素很可能被多个CSS规则所命中。此时，如果这些命中的规则涉及的属性不重复，那么它们会被`}<strong parentName=\"p\">{`层层叠加`}</strong>{`设置到该元素上。如果这些命中的规则涉及的属性重复，那么其中一条`}<strong parentName=\"p\">{`优先级`}</strong>{`最高的规则所涉及的属性将被设置到该元素上。`}</p>\n    <p><img alt=\"xxx\" src=\"http://res.junyux.com/images/course1/css1.jpg\" /></p>\n    <p>{`CSS的优先级是由属性的`}<strong parentName=\"p\">{`重要性`}</strong>{`、选择器的`}<strong parentName=\"p\">{`专用性`}</strong>{`和规则书写的`}<strong parentName=\"p\">{`次序`}</strong>{`依次决定，在这里我们不打算全面介绍，只先大致了解：`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`如果没有特殊声明（特殊声明在后续课程中介绍）我们设置的普通CSS属性的重要性一般来说是相同的。`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`选择器的专用性中，类选择器和伪类的专用性相同，它们高于元素选择器的专用性。在CSS规则的组合选择器中，选择器的专用性越高，优先级越高；当选择器的专用性一样时，选择器数量越多，优先级越高。`}</p>\n      </li>\n    </ol>\n    <p>{`因此上图中的例子，选择器优先级排序从高到低为：`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`a.friends:link`}</inlineCode>{`（1个伪类+1个类选择器+1个元素选择器）`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`a.friends`}</inlineCode>{` (0个伪类+1个类选择器+1个元素选择器)`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`a`}</inlineCode>{` (0个伪类+0个类选择器+1个元素选择器)`}</li>\n    </ol>\n    <p>{`如果选择器的重要性和专用性相同，代码中后出现的规则优先级更高，因此如果以下两条规则应用于`}<inlineCode parentName=\"p\">{`<a class=\"friends\">Link</a>`}</inlineCode>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`a:link {\n  color: red;\n}\na.friends {\n  color: green;\n}\n`}</code></pre>\n    <p>{`由于`}<inlineCode parentName=\"p\">{`a:link`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`a.friends`}</inlineCode>{`前者由一个元素选择器和一个伪类组成，后者由一个元素选择器和一个类选择器组成，它们的专用性比较结果是相同的，但由于`}<inlineCode parentName=\"p\">{`a.friends`}</inlineCode>{`在代码中出现的位置晚于`}<inlineCode parentName=\"p\">{`a:link`}</inlineCode>{`，因此最终规则应用后，`}<inlineCode parentName=\"p\">{`<a class=\"friends\">Link</a>`}</inlineCode>{`的文字颜色是绿色。`}</p>\n    <p>{`CSS选择器优先级是CSS非常重要的概念，在后续课程里我们还会通过实战深入学习。如果你想要先对完整规则有一个比较全面的了解，可以阅读`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance\"\n      }}>{`MDN CSS相关内容`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"小结\"\n    }}>{`小结`}</h2>\n    <p>{`这一讲主要介绍了：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`什么是CSS`}</li>\n      <li parentName=\"ul\">{`CSS的规则的基本书写语法`}</li>\n      <li parentName=\"ul\">{`可继承和非可继承的属性`}</li>\n      <li parentName=\"ul\">{`CSS规则的叠加和优先级`}</li>\n    </ul>\n    <p>{`下一讲，我将介绍CSS另一个非常重要的概念-盒模型。`}</p>\n    <h3 {...{\n      \"id\": \"-小练习\"\n    }}>{`👉🏻 小练习`}</h3>\n    <p>{`回到我们的例子页面，回答几个问题：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>我的第一个网页</title>\n    <style>\n    body {\n      background-color: black;\n      color: white;\n    }\n    p.first-para {\n      color: red;\n    }\n    a:link {\n      color: white;\n    }\n    a:hover {\n      color: green;\n    }\n    a:active {\n      color: orange;\n    }\n    a:visited {\n      color: yellow;\n    }\n    </style>\n  </head>\n  <body>\n    <h1>稀土教程</h1>\n    <img src=\"https://s1.ssl.qhres2.com/static/14a7d288e11f8022.svg\" alt=\"稀土掘金\">\n    <p class=\"first-para\">欢迎来到稀土教程，在这里，我们为你准备了由浅入深的<em>Web开发课程</em>。</p>\n    <h2>第3课</h2>\n    <p>要进入Web开发的世界，要做的第一件事是了解Web开发的语言。我们从<a href=\"https://developer.mozilla.org/zh-CN/docs/learn/HTML/Introduction_to_HTML\">HTML</a>开始入手，HTML是浏览器能够识别的“第一语言”。</p>\n  </body>\n</html>\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`如果我们要将两个p元素的文字颜色都设置为红色，应该怎么修改上面的CSS规则？`}</li>\n      <li parentName=\"ol\">{`如果我们添加以下CSS规则：`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`a {\n  color: orange;\n}\n`}</code></pre>\n    <p>{`浏览器会将链接的颜色变为桔色吗？如果能，为什么？如果不能，应该怎么做才能？`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`我们通过`}<inlineCode parentName=\"li\">{`.first-para`}</inlineCode>{`的class来给第一个段落p元素指定样式，这是最简单直接的方式，也是常用的一种方式。但是，在CSS选择器中有一类表示位置的伪类选择器，我们也可以通过它们，在不给p元素添加class的情况下对第一个段落p元素应用样式，你可以阅读来自MDN的`}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first-of-type\"\n        }}>{`参考文章`}</a>{`，学习如何使用伪类选择器，在不使用class的情况下对第一个段落p元素指定样式。CSS结构伪类选择器有12种，你也可以通过阅读这篇`}<a parentName=\"li\" {...{\n          \"href\": \"https://juejin.cn/post/7001869576069873695\"\n        }}>{`掘金社区的文章`}</a>{`来系统地了解它们的用法。`}</li>\n    </ol>\n\n    <Pagination previous={{\n      name: '上一节',\n      src: 'html_and_blog'\n    }} next={{\n      name: '下一节',\n      src: 'element_box'\n    }} mdxType=\"Pagination\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}